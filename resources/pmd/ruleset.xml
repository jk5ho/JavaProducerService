<?xml version="1.0"?>

<ruleset name="Ruby ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        The rulesets we want to use in pmd for Ruby MS. For a detailed description of pmd rulesets: http://pmd.sourceforge.net/rules/index.html
    </description>

    <!-- ERROR PRONE RULES -->
    <rule ref="category/java/errorprone.xml/JumbledIncrementer">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UnconditionalIfStatement">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/MisplacedNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/BrokenNullCheck">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/NullAssignment">
        <priority>4</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AssignmentInOperand">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/DontImportSun">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/CloseResource">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/NonStaticInitializer">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/BadComparison">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EqualsNull">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/InstantiationToGetClass">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/IdempotentOperations">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/MissingBreakInSwitch">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyIfStmt">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyWhileStmt">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyTryBlock">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyFinallyBlock">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptySwitchStatements">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyStatementBlock">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyInitializer">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyFinalizer">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/FinalizeOverloaded">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidCallingFinalize">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/ImportFromSamePackage">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/DoNotCallSystemExit">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals">
        <priority>1</priority>
    </rule>

    <!-- CODE STYLE RULES -->
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/ExtendsObject">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryConstructor">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/ConfusingTernary">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/DuplicateImports">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/DontImportJavaLang">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/ShortVariable">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/ShortMethodName">
        <priority>1</priority>
        <properties>
            <property name="minimum" value="2" />
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/MethodNamingConventions">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/AvoidDollarSigns">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/NoPackage">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/PackageCase">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryReturn">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryModifier">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/codestyle.xml/UselessParentheses">
        <priority>3</priority>
    </rule>

    <!-- MULTITHREADING RULES -->
    <rule ref="category/java/multithreading.xml/DoubleCheckedLocking">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/multithreading.xml/DontCallThreadRun">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/multithreading.xml/UseConcurrentHashMap">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/multithreading.xml/UnsynchronizedStaticDateFormatter">
        <priority>1</priority>
    </rule>

    <!-- PERFORMANCE RULES -->
    <rule ref="category/java/performance.xml/BooleanInstantiation">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/BigIntegerInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/performance.xml/OptimizableToArrayCall">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/IntegerInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/ByteInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/ShortInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/LongInstantiation">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/performance.xml/UseStringBufferForStringAppends">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/performance.xml/UseArraysAsList">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/performance.xml/AvoidArrayLoops">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/AddEmptyString">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/StringInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/performance.xml/StringToString">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/InefficientStringBuffering">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/UseStringBufferLength">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/performance.xml/AppendCharacterWithChar">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/performance.xml/UseIndexOfChar">
        <priority>4</priority>
    </rule>
    <rule ref="category/java/performance.xml/InefficientEmptyStringCheck">
        <priority>5</priority>
    </rule>
    <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration">
        <priority>4</priority>
    </rule>
    <rule ref="category/java/performance.xml/UselessStringValueOf">
        <priority>5</priority>
    </rule>

    <!-- DESIGN RULES -->
    <rule ref="category/java/design.xml/CollapsibleIfStatements">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/NPathComplexity">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveMethodLength">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveParameterList">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveClassLength">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/CyclomaticComplexity">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessivePublicCount">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/TooManyFields">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/TooManyMethods">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/CouplingBetweenObjects">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveImports">
        <priority>4</priority>
    </rule>
    <rule ref="category/java/design.xml/SimplifyBooleanReturns">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/design.xml/SimplifyBooleanExpressions">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
        <priority>1</priority>
        <properties>
            <property name="problemDepth">
                <value>4</value>
            </property>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/SwitchDensity">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/design.xml/FinalFieldCouldBeStatic">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/ImmutableField">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/SimplifyConditional">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/SingularField">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/LogicInversion">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/DoNotExtendJavaLangError">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/design.xml/UselessOverridingMethod">
        <priority>3</priority>
    </rule>

    <!-- BEST PRACTICES RULES -->
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/LooseCoupling">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt">
        <priority>4</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty">
        <priority>2</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UseVarargs">
        <priority>3</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedImports">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/GuardLogStatement">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/AvoidStringBufferField">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedPrivateField">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedLocalVariable">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
        <priority>1</priority>
    </rule>
    <rule ref="category/java/bestpractices.xml/UnusedFormalParameter">
        <priority>1</priority>
    </rule>

    <!-- DOCUMENTATION RULES -->
    <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody">
        <priority>3</priority>
    </rule>

</ruleset>
